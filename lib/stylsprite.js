// Generated by CoffeeScript 1.6.3
var exports, fs, path, plugin, stylus;

fs = require('fs');

path = require('path');

stylus = require('stylus');

plugin = function(css, img, sprite) {
  var stylsprite;
  stylsprite = function(params) {
    var backgroundPosition, dirName, height, imagePath, json, jsonPath, jsonStr, spriteName, spriteTokenName, token, url, urlArgs, urlChain, value, width, _i, _j, _len, _len1, _ref, _ref1;
    urlArgs = params.args.nodes[0];
    if (urlArgs.nodes.length) {
      urlChain = [];
      _ref = urlArgs.nodes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        value = _ref[_i];
        urlChain.push(value.string);
      }
      url = urlChain.join('');
    } else {
      url = urlArgs.nodes[0];
    }
    dirName = path.dirname(url);
    spriteName = path.basename(dirName);
    spriteTokenName = path.basename(url, '.png');
    jsonPath = path.join(sprite, spriteName + '.json');
    imagePath = dirName + '.png';
    jsonStr = fs.readFileSync(jsonPath);
    json = JSON.parse(jsonStr.toString());
    _ref1 = json.images;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      token = _ref1[_j];
      if (!(token.name === spriteTokenName)) {
        continue;
      }
      backgroundPosition = new stylus.nodes.Property(['background-position'], "" + (-token.positionX) + "px " + (-token.positionY) + "px");
      width = new stylus.nodes.Property(["width"], "" + token.width + "px");
      height = new stylus.nodes.Property(["height"], "" + token.height + "px");
      this.closestBlock.nodes.splice(this.closestBlock.index + 1, 0, backgroundPosition, width, height);
      break;
    }
    return new stylus.nodes.Property(['background-image'], "url(" + imagePath + ")");
  };
  return function() {
    return function(context) {
      return context.define('sprite', stylsprite);
    };
  };
};

exports = module.exports = plugin;

exports.path = __dirname;
